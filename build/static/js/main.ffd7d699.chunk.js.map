{"version":3,"sources":["router.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","React","lazy","Home","Router","props","rout","useHistory","useState","undefined","auth","setAuth","handleAuthChange","data","push","console","log","Suspense","fallback","email","Fragment","path","render","exact","component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6NAGMA,EAAOC,IAAMC,MAAK,kBAAM,iCACxBC,EAAOF,IAAMC,MAAK,kBAAM,uDAEf,SAASE,EAAOC,GAC7B,IAAMC,EAAOC,cADuB,EAEZC,wBAASC,GAFG,mBAE7BC,EAF6B,KAEvBC,EAFuB,KAG9BC,EAAmB,SAACC,GACpBA,IACFF,EAAQE,GACRP,EAAKQ,KAAK,qBAWd,OADAC,QAAQC,IAAIL,GAEV,cAAC,IAAMM,SAAP,CAAgBC,SAAU,2CAA1B,SACE,eAAC,IAAD,WAEIR,GAAsB,IAAdA,EAAKS,OAVjB,cAAC,IAAMC,SAAP,UACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,OAAQ,kBAAM,cAACnB,EAAD,CAAMO,KAAMA,SAUnD,cAAC,IAAD,CACEa,OAAK,EACLF,KAAK,IACLC,OAAQ,kBAAM,cAACtB,EAAD,CAAMW,QAASC,EAAkBF,KAAMA,OAEvD,cAAC,IAAD,CAAOW,KAAK,IAAIG,UAAW,kBAAI,6CCtBxBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ffd7d699.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route, useHistory, Switch } from \"react-router-dom\";\r\n\r\nconst Auth = React.lazy(() => import(\"./containers/Auth/Auth\"));\r\nconst Home = React.lazy(() => import(\"./containers/Dashboard/Dashboard\"));\r\n\r\nexport default function Router(props) {\r\n  const rout = useHistory();\r\n  const [auth, setAuth] = useState(undefined);\r\n  const handleAuthChange = (data) => {\r\n    if (data) {\r\n      setAuth(data);\r\n      rout.push(\"/dashboard/send\");\r\n    }\r\n  };\r\n  const internalRoutes = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Route path=\"/dashboard\" render={() => <Home auth={auth} />} />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  console.log(setAuth);\r\n  return (\r\n    <React.Suspense fallback={<h1>Loading..</h1>}>\r\n      <Switch>\r\n        \r\n        {(auth && auth.email != \"\") && internalRoutes()}\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <Auth setAuth={handleAuthChange} auth={auth} />}\r\n        />  \r\n        <Route path=\"*\" component={()=><h1>404</h1>}/>\r\n      </Switch>\r\n    </React.Suspense>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Routes from \"./router\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}